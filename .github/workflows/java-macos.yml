name: Java on macOS
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '17'
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build with Maven
      run: mvn package
    - name: Get directory where we are now
      run: |
        pwd
        ls
    - name: Download engines
      run: |
        python download_engines.py
        cd engines
        ls
    - name: Install unzip
      run: |
        if [[ "$OSTYPE" == "darwin"* ]]; then
          brew install unzip
        elif [[ "$OSTYPE" == "win"* ]]; then
          curl -O https://downloads.sourceforge.net/project/gnuwin32/unzip/6.0-1/unzip-6.0-1-bin.zip -O unzip.zip
          mkdir unzip
          Expand-Archive unzip.zip -DestinationPath unzip
          setx PATH "$env:PATH;$(Get-Location)\unzip\bin" /M
        fi

    - name: Download modeltf1
      run: |
        #brew install unzip
        mkdir -p modeltf1
        cd modeltf1
        curl -O https://zenodo.org/api/files/5a9cfb56-3a5d-4796-986d-8f46b7987b92/tf_weights.zip
        unzip tf_weights.zip
        ls
    - name: Download modeltf2
      run: |
        #brew install unzip
        mkdir -p modeltf2
        cd modeltf2
        curl -O https://github.com/stardist/stardist-icy/raw/main/src/main/resources/models/2D/dsb2018_paper.zip
        unzip dsb2018_paper.zip
        ls
    - name: Build with Maven
      run: mvn package shade:shade
    - name: Run Java file
      env:
        temp:
          macos-latest: /Users/runner/work/_temp
          ubuntu-latest: ${{ runner.temp }}
          windows-latest: ${{ env.TEMP }}\\runner\\$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')_$(echo ${{ runner.architecture }} | tr '[:upper:]' '[:lower:]')\\_temp
      run: |
        ls ${{ matrix.temp }}
        # java -jar target/dl-model-runner-0.0.0.jar
        if [[ "$OSTYPE" == "win"* ]]; then
          java -cp  target\dl-model-runner-0.0.0.jar io.bioimage.modelrunner.example.ExampleLoadTensorflow1Tensorflow2
        else; then
          java -cp  target/dl-model-runner-0.0.0.jar io.bioimage.modelrunner.example.ExampleLoadTensorflow1Tensorflow2
        fi
        ls ${{ matrix.temp }}
      

